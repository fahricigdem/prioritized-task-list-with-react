{"version":3,"sources":["components/NewTask.js","App.js","reportWebVitals.js","index.js"],"names":["NewTask","className","style","minHeight","type","name","placeholder","required","id","for","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA0DeA,EAtDC,WAEZ,OACI,qBAAKC,UAAU,gBAAgBC,MAAO,CAAEC,UAAW,SAAnD,SAEI,uBAAMF,UAAU,cAAhB,cACI,uBACIA,UAAU,eACVG,KAAK,OACLC,KAAK,cAELC,YAAY,WAEZC,UAAQ,IAGZ,uBACIH,KAAK,WACLC,KAAK,WACLG,GAAG,OAdX,IAiBO,wBAAOC,IAAI,KAAX,UAAgB,yBAAhB,YAGH,uBACIL,KAAK,WACLC,KAAK,WACLG,GAAG,OAvBX,IA0BO,wBAAOC,IAAI,KAAX,UAAgB,yBAAhB,eAYH,uBACA,wBAAQR,UAAU,iBAAlB,uBCTDS,IC3BAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCMdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.7d30cdc9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './NewTask.css';\r\n\r\n\r\nconst NewTask = () => {\r\n\r\n    return (\r\n        <div className=\"formContainer\" style={{ minHeight: '100vh' }} >\r\n\r\n            <form className=\"newTaskForm\" > {/*onSubmit={onSubmit} */}\r\n                <input\r\n                    className=\"newTaskInput\"\r\n                    type=\"text\"\r\n                    name=\"newTaskName\"\r\n                    // value={newTaskName}\r\n                    placeholder=\"New Task\"\r\n                    // onChange={onChange}\r\n                    required\r\n                />\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"isUrgent\"\r\n                    id=\"c1\"\r\n                // checked={isImportant}\r\n                // onChange={onChange}\r\n                /> <label for=\"c1\"><span></span>Urgent</label>\r\n\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    name=\"isUrgent\"\r\n                    id=\"c2\"\r\n                // checked={isImportant}\r\n                // onChange={onChange}\r\n                /> <label for=\"c2\"><span></span>Important</label>\r\n\r\n                {/* <textarea\r\n                    className=\"newTaskDetail\"\r\n                    name=\"newTaskDetail\"\r\n                    id=\"taskDetail\"\r\n                    // value={newTaskDetail}\r\n                    cols=\"24\"\r\n                    rows=\"4\"\r\n                    placeholder=\"New Task Detail\"\r\n                // onChange={onChange}\r\n                /> */}\r\n                <br />\r\n                <button className=\"btn btn-danger\">Add</button>\r\n\r\n\r\n\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NewTask","import './App.css';\nimport NewTask from './components/NewTask'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"TaskGroupRow\">\n        <div className=\"TaskGroup UrgentImp\">\n          <h5>Urgent &</h5>\n          <h5>Important </h5>\n          <h4><span className=\"badge rounded-pill bg-danger\">0</span></h4>\n        </div>\n        <div className=\"TaskGroup notUrgentImp\">\n          <h5>Important</h5>\n          {/* <h5>not Urgent </h5> */}\n          <h4><span className=\"badge rounded-pill bg-secondary\">0</span></h4>\n        </div>\n      </div>\n\n      <div className=\"AddHome\"><h1> + </h1></div>\n\n      <div className=\"TaskGroupRow\">\n        <div className=\"TaskGroup UrgentNotImp\">\n          <h5>Urgent</h5>\n          {/* <h5>not Important </h5> */}\n          <h4><span className=\"badge rounded-pill bg-secondary\">0</span></h4></div>\n        <div className=\"TaskGroup notUrgentNotImp\">\n          {/* <h5>not Urgent</h5>\n          <h5>not Important </h5> */}\n          <h5>others</h5>\n          <h4><span className=\"badge rounded-pill bg-secondary\">0</span></h4>\n        </div>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//components\nimport NewTask from './components/NewTask'\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <NewTask />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}